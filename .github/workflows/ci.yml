on: [push]
name: Continuous Integration

jobs:
  inspect-code:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # FIXME: Tools won't run in .NET 6.0 unless you install 3.1.x LTS side by side.
      # https://itnext.io/how-to-support-multiple-net-sdks-in-github-actions-workflows-b988daa884e
      - name: Install .NET 3.1.x LTS
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "3.1.x"

      - name: Install .NET 6.0.x
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "6.0.x"

      - name: Restore Tools
        run: dotnet tool restore

      - name: Restore Packages
        run: dotnet restore

      - name: Restore inspectcode cache
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/inspectcode
          key: inspectcode-${{ hashFiles('.config/dotnet-tools.json', '.github/workflows/ci.yml', 'osu.Game.Rulesets.Tau.sln*', '.editorconfig', '.globalconfig') }}

      - name: Dotnet code style
        run: dotnet build -c Debug osu.Game.Rulesets.Tau.sln -p:EnforceCodeStyleInBuild=true

      - name: InspectCode
        run: dotnet jb inspectcode $(pwd)/osu.Game.Rulesets.Tau.sln --no-build --output="inspectcodereport.xml" --caches-home="inspectcode" --verbosity=WARN

      - name: NVika
        run: dotnet nvika parsereport "${{github.workspace}}/inspectcodereport.xml"

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3.0.0
        with:
          name: osu.Game.Rulesets.Tau.dll
          path: "osu.Game.Rulesets.Tau/bin/Debug/net6.0"
          retention-days: 90

      - name: Discord success
        uses: naoei/discord-webhook-notify@master
        if: ${{ success() }}
        with:
          severity: info
          color: '#00FFAA'
          description: "[${{ github.run_number }}] [${{ github.event.head_commit.message }}](${{ github.event.head_commit.url }})"
          details: "Build was a success!"
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}

      - name: Discord failure
        uses: naoei/discord-webhook-notify@master
        if: ${{ failure() }}
        with:
          severity: error
          color: '#FF0040'
          description: "[${{ github.run_number }}] [${{ github.event.head_commit.message }}](${{ github.event.head_commit.url }})"
          details: "Build was a failure."
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}

  test:
    name: Test
    runs-on: ${{matrix.os.fullname}}
    env:
      OSU_EXECUTION_MODE: ${{matrix.threadingMode}}
    strategy:
      fail-fast: false
      matrix:
        os:
          - { prettyname: Windows, fullname: windows-latest }
          - { prettyname: macOS, fullname: macos-latest }
          - { prettyname: Linux, fullname: ubuntu-latest }
        threadingMode: ['SingleThread', 'MultiThreaded']
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install .NET 6.0.x
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "6.0.x"

      # FIXME: libavformat is not included in Ubuntu. Let's fix that.
      # https://github.com/ppy/osu-framework/issues/4349
      # Remove this once https://github.com/actions/virtual-environments/issues/3306 has been resolved.
      - name: Install libavformat-dev
        if: ${{matrix.os.fullname == 'ubuntu-latest'}}
        run: |
          sudo apt-get update && \
          sudo apt-get -y install libavformat-dev
      - name: Compile
        run: dotnet build -c Debug -warnaserror osu.Game.Rulesets.Tau.sln

      - name: Test
        run: dotnet test $pwd/*.Tests/bin/Debug/*/*.Tests.dll --logger "trx;LogFileName=TestResults-${{matrix.os.prettyname}}-${{matrix.threadingMode}}.trx"
        shell: pwsh

      # Attempt to upload results even if test fails.
      # https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#always
      - name: Upload Test Results
        uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: tau-test-results-${{matrix.os.prettyname}}-${{matrix.threadingMode}}
          path: ${{github.workspace}}/TestResults/TestResults-${{matrix.os.prettyname}}-${{matrix.threadingMode}}.trx
